I"<h2 id="들어가며">들어가며</h2>

<p>문제 있던 파일을 배포한 직후, 문제가 발생했었습니다. 새로고침 혹은 Cache를 지운 컴퓨터의 브라우저에서는 수정된 정상적인 파일로 보이게 되지만, 그렇지 않다면 기존의 문제된 파일이 보이게 됩니다. 이러한 현상은 Cache에 의해 발생하게 되는데 왜 발생하고, 어떻게 해결해야 하는지 알아 보도록 하겠습니다. Cache에 대해 전체적으로도 알아보도록 하겠습니다.</p>

<p><br /></p>

<h2 id="cache캐시">Cache(캐시)</h2>

<p><code class="language-plaintext highlighter-rouge">웹 캐시는 자주 쓰이는 문서의 사본을 자동으로 보관하는 HTTP 장치 입니다.</code> 웹 요청이 캐시에 도착 했을 때, 캐시된 로컬 사본이 존재한다면 서버가 아니라 캐시로부터 응답이 제공됩니다. 캐시의 장점은 다음과 같습니다.</p>
<ul>
  <li>캐시는 불필요한 데이터 전송을 줄여서, 네트워크 요금으로 인한 비용을 줄여 줍니다.</li>
  <li>캐시는 네트워크 병목(Bottleneck)을 줄여줍니다. 대역폭을 늘리지 않고도 페이지를 빨리 불러올 수 있게 해줍니다.</li>
  <li>캐시는 원 서버에 대한 요청을 줄여줍니다.</li>
  <li>캐시는 거리로 인한 지연을 줄여줍니다.</li>
</ul>

<p>이제 캐시의 특징에 대해서 보겠습니다.</p>

<p><br /></p>

<h3 id="1-불필요한-데이터-전송">1. 불필요한 데이터 전송</h3>

<p>복수의 클라이언트가 자주 쓰이는 원 서버 페이지에 접글할 때, 서버는 같은 문서를 클라이언트들에게 각각 한 번씩 전송하게 됩니다. 똑같은 바이트들이 네트워크를 통해서 계속 반복해서 이동하며 이 <strong>불필요한 데이터는 값비싼 네티워크 대역폭을 잡아먹고, 전송을 느리게 만들며, 웹 서버에 부하를 줍니다.</strong> 캐시를 이용하면 첫 응답이 캐시에 보관되며, 뒤이은 요청들은 캐시를 응답으로 사용하기 때문에 낭비를 줄일 수 있습니다.</p>

<p><br /></p>

<h3 id="2-대역폭-병목">2. 대역폭 병목</h3>

<p>많은 네트워크가 원격 서버보다 로컬 네트워크 클라이언트에 더 넓은 대역폭을 제공 합니다. 때문에 캐시를 사용한다면 네트워크 병목을 줄여주고, 빠른 속도로 문서를 응답받을 수 있을 것 입니다.</p>

<p><br /></p>

<h3 id="3-갑작스런-요청-쇄도flash-crowds">3. 갑작스런 요청 쇄도(FLash Crowds)</h3>

<p>캐싱은 갑작스런 요청 쇄도에 대처하기에 특히 중요합니다. 갑자스러운 사고, 이벤트 등으로 인해 많은 사람이 거의 동시에 몰릴 수 있습니다. 이 결과로 초래된 트래픽의 급격한 증가는 네트워크와 웹 서버에 심각한 장애를 야기 시킵니다. 캐시를 이러한 급격한 요청 증가에 대응하기에 좋습니다.</p>

<p><br /></p>

<h3 id="4-거리로-인한-지연">4. 거리로 인한 지연</h3>

:ET